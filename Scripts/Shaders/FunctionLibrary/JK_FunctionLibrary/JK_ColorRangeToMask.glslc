#version 150

////////////////////////////////////////////////////////////////////////////////
// Mari Ideascale Procedural Library
// Copyright (c) 2013 Jens Kafitz. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////
// File: JK_ColorRangeToMask.glslc
// Description: Required Functions for ColorRange To Mask Node.
////////////////////////////////////////////////////////////////////////////////
// Author: Jens Kafitz | Mari Ideascale
// Web: www.campi3d.com
// Web: www.mari.ideascale.com
// Email: MariIdeas@campi3d.com
////////////////////////////////////////////////////////////////////////////////
// Modified Date: June 14, 2014
////////////////////////////////////////////////////////////////////////////////
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
// IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
// OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
// OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
// ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
////////////////////////////////////////////////////////////////////////////////

// forward declarations
vec4 mriRgb2Hsv(vec4 colorIn);
vec4 mriHsv2Rgb(vec4 colorIn);

// enhancing picked color ranges by applying a vibrancy function for saturation
// default values for color range to mask are (inputcolor,0.2,0.3,3.5)
vec4 fullVibrance(vec4 inputColor,float max, float min, float power)
{
	vec4 input_hsv = mriRgb2Hsv(inputColor);
	float satClamp = input_hsv.g;
	float range = 1.0 - (((max - min) * satClamp) + min) ;
	float saturation = pow(range,power);
	satClamp = satClamp + saturation;
	input_hsv = mriHsv2Rgb(vec4(input_hsv.r,satClamp,input_hsv.b,1.0));
	return input_hsv;
}
