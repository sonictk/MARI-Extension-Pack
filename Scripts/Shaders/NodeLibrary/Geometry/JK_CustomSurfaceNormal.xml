<!--
================================================================================
== Mari Ideascale Procedural Library
== Copyright (c) 2013 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_CustomSurfaceNormal.xml
== Description: Modify the object surface normal with a custom normal direction.
================================================================================
== Author: Jens Kafitz | Mari Ideascale
== Web: www.campi3d.com
== Web: www.mari.ideascale.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: January, 13 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>Custom Object Normal</ID>
    <DefaultName>Custom Object Normal</DefaultName>
    <Category>Geometry/Custom/</Category>
    <Inputs>
        <Input Name="Input" />
    </Inputs>
    <Attributes>
        <!--===============================================================================================================-->
        <Attribute Name="rX" PrettyName="Rotate X" Group="Rotate Normal" Type="double" Min="0" Max="360">0</Attribute>
        <Attribute Name="rY" PrettyName="Rotate Y" Group="Rotate Normal" Type="double" Min="0" Max="360">0</Attribute>
        <Attribute Name="rZ" PrettyName="Rotate Z" Group="Rotate Normal" Type="double" Min="0" Max="360">0</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="oX" PrettyName="Offset X" Group="Offset Normal" Type="double" Min="-1" Max="1">0</Attribute>
        <Attribute Name="oY" PrettyName="Offset Y" Group="Offset Normal" Type="double" Min="-1" Max="1">0</Attribute>
        <Attribute Name="oZ" PrettyName="Offset Z" Group="Offset Normal" Type="double" Min="-1" Max="1">0</Attribute>

    </Attributes>
    <Groups>
        <Group Name="Precision" Expanded="false"></Group>
    </Groups>
    <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="Input"><Pos>0,-50</Pos></Input>
            </Inputs>
        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                    <Input Name="Input"> <Default>vec4(State.Normal,1.0)</Default> </Input>
                </Inputs>
            </Shader>
                <Shader ShaderType='TessEvaluation'>
                    <Inputs>
                        <Input Name="Input"> <Default>vec4(State.Normal.xyz,1.0)</Default> </Input>
                    </Inputs>
                </Shader>
            <Shader>
                <Body><![CDATA[

                #if defined MRI_SHADER_FRAGMENT || defined MRI_SHADER_TESS_EVALUATION

                float rX = $rX;
                float rY = $rY;
                float rZ = $rZ;

                float oX = $oX;
                float oY = $oY;
                float oZ = $oZ;

                // build the needed vector attributes for position transform, offset max growths exponentially
                vec3 trans = vec3(oX,oY,oZ);
                vec3 rotate = vec3(rX,rY,rZ);
                vec3 scale = vec3(1.0,1.0,1.0);

                // transform the position to translate,rotate,scale the position
                vec3 P = positionTransform(State.Normal,trans,rotate,scale);

                vec4 rotationResult = vec4(P, #Input.a);
                Output = rotationResult;

                #endif

                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>

