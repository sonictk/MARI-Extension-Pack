<!--
================================================================================
== Object Space Radial Gradient
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_ObjectdSpaceRadialGradient.xml
== Description: Generates a radial gradient around a defined pivot
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: May, 18 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>JK_ObjectSpaceRadialGradient</ID>
    <DefaultName>Object Space Radial Gradient</DefaultName>
    <Category>Environment/Extension Pack/</Category>
    <Inputs>
        <Input Name="Transform" PrettyName="Manifold"></Input>
    </Inputs>
    <Attributes>
         <!--===============================================================================================================-->
        <Attribute Name="colorA" PrettyName="Color A" Group="Color" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(1,1,1,1)</Attribute>
        <Attribute Name="colorB" PrettyName="Color B" Group="Color" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0,0,0,1)</Attribute>
        <Attribute Name="Invert" PrettyName="Invert" Group="Color" Type="bool" Min="false" Max="true" Description="Inverts the Noise result before ColorA+B are applied" >false</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="Size" PrettyName="Size" Group="Modifiers" Type="double" Logarithmic="1" Min="0.0" Max="1000">100</Attribute>
        <Attribute Name="Intensity" PrettyName="Intensity" Group="Modifiers" Type="double" Min="0.0" Max="1.0">0.5</Attribute>
        <Attribute Name="Map" PrettyName="Gradient Curve" Group="Modifiers" Type="curve"></Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="PreviewPos" PrettyName="Display Object Position as Color Value" Group="Gradient Pivot" Type="bool">false</Attribute>
        <Attribute Name="XOffset" PrettyName="X Offset" Group="Gradient Pivot" Type="double" Min="-10000" Max="10000">0</Attribute>
        <Attribute Name="XFine" PrettyName="Offset" Group="Gradient Pivot" Type="double" Min="-10" Max="10">0</Attribute>
        <Attribute Name="YOffset" PrettyName="Y Offset" Group="Gradient Pivot" Type="double" Min="-10000" Max="10000">0</Attribute>
        <Attribute Name="YFine" PrettyName="Offset" Group="Gradient Pivot" Type="double" Min="-10" Max="10">0</Attribute>
        <Attribute Name="ZOffset" PrettyName="Z Offset" Group="Gradient Pivot" Type="double" Min="-10000" Max="10000" >0</Attribute>
        <Attribute Name="ZFine" PrettyName="Offset" Group="Gradient Pivot" Type="double" Min="-10" Max="10">0</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="scaleX" PrettyName="Scale X" Group="Transform Scale" Type="float" Min="0" Max="100" Logarithmic="1">1</Attribute>
        <Attribute Name="scaleY" PrettyName="Scale Y" Group="Transform Scale" Type="float" Min="0" Max="100" Logarithmic="1">1</Attribute>
        <Attribute Name="scaleZ" PrettyName="Scale Z" Group="Transform Scale" Type="float" Min="0" Max="100" Logarithmic="1">1</Attribute>
        <!--===============================================================================================================-->

    </Attributes>
    <Groups>
        <Group Name="Space" Expanded="false"></Group>
        <Group Name="Transform Scale" Expanded="false"></Group>
        <Group Name="Transform Rotate" Expanded="false"></Group>
        <Group Name="Transform Translate" Expanded="false"></Group>
    </Groups>
    <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="Transform" ><Pos>0,-50</Pos></Input>
            </Inputs>
        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                <Input Name="Transform" ><Default>vec4(State.Position,1.0)</Default></Input>
                </Inputs>
            </Shader>
            <Shader>
                <Body><![CDATA[

                // 3d space surface position
                // build the needed vector attributes for position transform, offset max growths exponentially
                float XOffset = $XOffset + $XFine;
                float YOffset = $YOffset + $YFine;
                float ZOffset = $ZOffset + $ZFine;
                vec3 trans = vec3(XOffset,YOffset,ZOffset);
                vec3 rotate = vec3(0.0);
                vec3 scale = vec3(1.0) / vec3($scaleX*$Size,$scaleY*$Size,$scaleZ*$Size);

                #if defined MRI_SHADER_FRAGMENT || defined MRI_SHADER_TESS_EVALUATION
                vec3 P = positionTransform(#Transform.rgb,trans+u_MriObjectCenter,rotate,scale);

                float curvP = length(P) * ($Intensity*$Intensity) ;
                curvP = clamp(curvP,0.0,1.0);
                float curveInput = mriCurveLookup($Map,curvP);

                // prevPos is State.Position without changes
                vec4 prevPos = #Transform;

                vec4 color = $Invert ? mix($colorB,$colorA,curveInput): mix($colorA,$colorB,curveInput) ;
                // Position Preview Mix
                Output = mix(color,prevPos,float($PreviewPos));

                #endif


                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>
