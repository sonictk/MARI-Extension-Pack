<!--
================================================================================
== Input Switch
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_Switch.xml
== Description: Switch between Inputs based on a number
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: July, 20 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>JK_Switch</ID>
    <DefaultName>Input Switch</DefaultName>
    <Category>Layer/Custom/</Category>
    <Inputs>
        <Input Name="Case_A" PrettyName='Case A'></Input>
        <Input Name="Case_B" PrettyName='Case B'></Input>
        <Input Name="Case_C" PrettyName='Case C'></Input>
        <Input Name="Case_D" PrettyName='Case D'></Input>
        <Input Name="Selection" PrettyName='Case Selection'></Input>

    </Inputs>
    <Attributes>
        <Attribute Name="Value" PrettyName="Step Cases by" Type="double" Min="0"  Description="Threshold of final result" >0.251</Attribute>
    </Attributes>
 <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="Case_D"><Pos>100,-100</Pos></Input>
                <Input Name="Case_C"><Pos>50,-100</Pos></Input>
                <Input Name="Case_B"><Pos>-50,-100</Pos></Input>
                <Input Name="Case_A"><Pos>-100,-100</Pos></Input>

                <Input Name="Selection"><Pos>150,0</Pos></Input>
            </Inputs>
        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                </Inputs>
            </Shader>
            <Shader ShaderType='TessEvaluation'>
                <Inputs>
                </Inputs>
            </Shader>
            <Shader>
                <Body><![CDATA[


    int selector = int ( (#Selection.r + $Value) / $Value );
    vec4 result;

    switch(selector)
    {

        case 1: result = #Case_A; break;
        case 2: result = #Case_B; break;
        case 3: result = #Case_C; break;
        case 4: result = #Case_D; break;
    }

    Output = result;

                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>

