<!--
================================================================================
== Condition
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_Condition.xml
== Description: Conditional Node
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: November, 20 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>JK_Condition</ID>
    <DefaultName>Condition</DefaultName>
    <Category>Layer/Extension Pack/</Category>
    <Inputs>
        <Input Name="A"></Input>
        <Input Name="B"></Input>
        <Input Name="THEN"></Input>
        <Input Name="ELSE"></Input>
        <Input Name="Tolerance"></Input>
    </Inputs>
    <Attributes>
     <Attribute Name="Condition" Type="stringlist"> A equal B, A equal B, A not equal B, A largen B, A smaller B</Attribute>
     <Attribute Name="Tolerance" PrettyName="Max Tolerance" Type="double" Min="0"  Max="1" Description="Adds a tolerance to any value" >0.1</Attribute>

    </Attributes>
 <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="ELSE"><Pos>100,-100</Pos></Input>
                <Input Name="THEN"><Pos>50,-100</Pos></Input>
                <Input Name="B"><Pos>-50,-100</Pos></Input>
                <Input Name="A"><Pos>-100,-100</Pos></Input>
                <Input Name="Tolerance"><Pos>120,0</Pos></Input>

            </Inputs>
        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                <Input Name="Tolerance"><Default>vec4($Tolerance,$Tolerance,$Tolerance,1.0)</Default></Input>
                <Input Name="THEN"><Default>vec4(1.0)</Default></Input>
                <Input Name="ELSE"><Default>vec4(0.0,0.0,0.0,1.0)</Default></Input>
                </Inputs>
            </Shader>
            <Shader ShaderType='TessEvaluation'>
                <Inputs>
                <Input Name="Tolerance"><Default>vec4($Tolerance,$Tolerance,$Tolerance,1.0)</Default></Input>
                </Inputs>
            </Shader>
            <Shader>
                <Body><![CDATA[

    // Initialize Tolerance Slider - do not remove this comment:
    // $Tolerance


    if ($Condition == 0)
        {
            if (#A.r < (#B.r - #Tolerance.r) || #A.r > (#B.r + #Tolerance.r) )
                {Output.r = #ELSE.r;}
            else
                {Output.r = #THEN.r; }

            if (#A.g < (#B.g - #Tolerance.r) || #A.g > (#B.g + #Tolerance.r) )
                {Output.g = #ELSE.g;}
            else
                {Output.g = #THEN.g; }

            if (#A.b < (#B.b - #Tolerance.r) || #A.b > (#B.b + #Tolerance.r) )
                {Output.b = #ELSE.b;}
            else
                {Output.b = #THEN.b; }

            if (#A.a < (#B.a - #Tolerance.r) || #A.a > (#B.a + #Tolerance.r) )
                {Output.a = #ELSE.a;}
            else
                {Output.a = #THEN.a; }
        }

    else if ($Condition == 1)
         {
            if (#A.r < (#B.r - #Tolerance.r) || #A.r > (#B.r + #Tolerance.r) )
                {Output.r = #THEN.r;}
            else
                {Output.r = #ELSE.r; }

            if (#A.g < (#B.g - #Tolerance.r) || #A.g > (#B.g + #Tolerance.r) )
                {Output.g = #THEN.g;}
            else
                {Output.g = #ELSE.g; }

            if (#A.b < (#B.b - #Tolerance.r) || #A.b > (#B.b + #Tolerance.r) )
                {Output.b = #THEN.b;}
            else
                {Output.b = #ELSE.b; }

            if (#A.a < (#B.a - #Tolerance.r) || #A.a > (#B.a + #Tolerance.r) )
                {Output.a = #THEN.a;}
            else
                {Output.a = #ELSE.a; }
        }


    else if ($Condition == 2)
        {
            if (#A.r > #B.r + #Tolerance.r)
                {Output.r = #THEN.r;}
            else
                {Output.r = #ELSE.r; }

            if (#A.g > #B.g + #Tolerance.r)
                {Output.g = #THEN.g;}
            else
                {Output.g = #ELSE.g; }

            if (#A.b > #B.b + #Tolerance.r)
                {Output.b = #THEN.b;}
            else
                {Output.b = #ELSE.b; }

            if (#A.a > #B.a + #Tolerance.r)
                {Output.a = #THEN.a;}
            else
                {Output.a = #ELSE.a; }
        }


    else if ($Condition == 3)
        {
            if (#A.r < #B.r - #Tolerance.r)
                {Output.r = #THEN.r;}
            else
                {Output.r = #ELSE.r; }

            if (#A.g < #B.g - #Tolerance.r)
                {Output.g = #THEN.g;}
            else
                {Output.g = #ELSE.g; }

            if (#A.b < #B.b - #Tolerance.r)
                {Output.b = #THEN.b;}
            else
                {Output.b = #ELSE.b; }

            if (#A.a < #B.a - #Tolerance.r)
                {Output.a = #THEN.a;}
            else
                {Output.a = #ELSE.a; }
        }


                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>

