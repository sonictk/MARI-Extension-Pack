    <!--
===============================================================================
== Material Region Metal-Rough
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_Region_MR.xml
== Description: Material Region to modulate values throughout the flow of the graph
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: October, 3 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>JK_Region_Metal</ID>
    <DefaultName>MR Region (MetalRough)</DefaultName>
    <Category>Material Regions/Metal-Rough/</Category>
    <Inputs>
        <Input Name="IN_A" PrettyName="Input A"/>
        <Input Name="IN_B" PrettyName="Input B"/>
        <Input Name="IN_C" PrettyName="Input C"/>
        <Input Name="IN_D" PrettyName="Input D"/>
        <Input Name="RegionMask" />
        <Input Name="baseColor" PrettyName="Base Color" />
        <Input Name="roughness" PrettyName="Roughness"/>
        <Input Name="metalness" PrettyName="Metal"/>
        <Input Name="specular" PrettyName="F0Specular"/>
        <Input Name="height" PrettyName="Height"/>
        <Input Name="normal"/>
    </Inputs>
    <Outputs>
        <Output Name="OUT_A" PrettyName="Output A"/>
        <Output Name="OUT_B" PrettyName="Output B"/>
        <Output Name="OUT_C" PrettyName="Output C"/>
        <Output Name="OUT_D" PrettyName="Output D"/>
        <Output Name="DEBUG" />
    </Outputs>
    <Attributes>
    <Attribute Name="useRegion" PrettyName="Activate Region" Type="bool" Min="false" Max="true">true</Attribute>
    <Attribute Name="debugmode" PrettyName="Debug Output" Group="" Type="userenum">baseColor,baseColor,roughness,metalness,specular,height,Normal,vec4(0.0),regionMsk_debug,id_mask,Base Color,Roughness,Metal,F0Specular,Height,Normal,-------------,Region Mask, Region Mask over ID</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="baseColor_Use" PrettyName="On/Off" Group="Handle Base Color (RGBA)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="baseColor_color" PrettyName="Color" Group="Handle Base Color (RGBA)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(1,1,1,1)</Attribute>
    <Attribute Name="baseColor_float" PrettyName="Float" Group="Handle Base Color (RGBA)" Type="double">1.0</Attribute>
    <Attribute Name="baseColor_mix" PrettyName="Mix" Group="Handle Base Color (RGBA)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="baseColor_BlendMode" PrettyName="Mode" Group="Handle Base Color (RGBA)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="baseColor_clamp" PrettyName="Clamp Input" Group="Handle Base Color (RGBA)" Type="bool" Min="false" Max="true">true</Attribute>
     <!--===============================================================================================================-->
    <Attribute Name="roughness_Use" PrettyName="On/Off" Group="Handle Roughness (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="roughness_float" PrettyName="Float" Group="Handle Roughness (float)" Type="double">0.5</Attribute>
    <Attribute Name="roughness_mult" PrettyName="Input Multiplier" Group="Handle Roughness (float)" Type="double">1.0</Attribute>
    <Attribute Name="roughness_mix" PrettyName="Mix" Group="Handle Roughness (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="roughness_BlendMode" PrettyName="Mode" Group="Handle Roughness (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="roughness_clamp" PrettyName="Clamp Input" Group="Handle Roughness (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="metalness_Use" PrettyName="On/Off" Group="Handle Metal (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="metalness_float" PrettyName="Float" Group="Handle Metal (float)" Type="double">1.0</Attribute>
    <Attribute Name="metalness_mult" PrettyName="Input Multiplier" Group="Handle Metal (float)" Type="double">1.0</Attribute>
    <Attribute Name="metalness_mix" PrettyName="Mix" Group="Handle Metal (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="metalness_BlendMode" PrettyName="Mode" Group="Handle Metal (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="metalness_clamp" PrettyName="Clamp Input" Group="Handle Metal (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="specular_Use" PrettyName="On/Off" Group="Handle F0Specular (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="specular_float" PrettyName="Float" Group="Handle F0Specular (float)" Type="double">0.5</Attribute>
    <Attribute Name="specular_mult" PrettyName="Input Multiplier" Group="Handle F0Specular (float)" Type="double">1.0</Attribute>
    <Attribute Name="specular_mix" PrettyName="Mix" Group="Handle F0Specular (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="specular_BlendMode" PrettyName="Mode" Group="Handle F0Specular (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="specular_clamp" PrettyName="Clamp Input" Group="Handle F0Specular (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="height_Use" PrettyName="On/Off" Group="Handle Height (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="height_float" PrettyName="Float" Group="Handle Height (float)" Type="double">0.0</Attribute>
    <Attribute Name="height_mult" PrettyName="Input Multiplier" Group="Handle Height (float)" Type="double">1.0</Attribute>
    <Attribute Name="height_mix" PrettyName="Mix" Group="Handle Height (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="height_BlendMode" PrettyName="Mode" Group="Handle Height (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="height_clamp" PrettyName="Clamp Input" Group="Handle Height (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="normal_Use" PrettyName="On/Off" Group="Handle Normal (RGBA)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="normal_color" PrettyName="Color" Group="Handle Normal (RGBA)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0.216,0.216,1.0,1.0)</Attribute>
    <Attribute Name="normal_float" PrettyName="Float" Group="Handle Normal (RGBA)" Type="double">1.0</Attribute>
    <Attribute Name="normal_mix" PrettyName="Mix" Group="Handle Normal (RGBA)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="normal_BlendMode" PrettyName="Mode" Group="Handle Normal (RGBA)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="normal_clamp" PrettyName="Clamp Input" Group="Handle Normal (RGBA)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="idPick" PrettyName="On/Off" Group="Material Region ID" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="idColor" PrettyName="Mask ID" Group="Material Region ID" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0.0,0.0,0.0,1)</Attribute>
    <Attribute Name="idError" PrettyName="Max Error" Group="Material Region ID" Type="double" Min="0.0" Max="0.5">0.1</Attribute>
    <!--===============================================================================================================-->
</Attributes>
 <Groups>
     <Group Name="Handle Base Color (RGBA)" Expanded="false"></Group>
     <Group Name="Handle Roughness (float)" Expanded="false"></Group>
     <Group Name="Handle Metal (float)" Expanded="false"></Group>
     <Group Name="Handle F0Specular (float)" Expanded="false"></Group>
     <Group Name="Handle Height (float)" Expanded="false"></Group>
     <Group Name="Handle Normal (RGBA)" Expanded="false"></Group>
     <Group Name="Material Region ID" Expanded="false"></Group>
 </Groups>
 <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="IN_A"><Pos>-170,-40</Pos></Input>
                <Input Name="IN_B"><Pos>-170,-20</Pos></Input>
                <Input Name="IN_C"><Pos>-170,20</Pos></Input>
                <Input Name="IN_D"><Pos>-170,40</Pos></Input>
                <Input Name="RegionMask"><Pos>0,150</Pos></Input>

                <Input Name="baseColor"><Pos>40,-150</Pos></Input>
                <Input Name="roughness"><Pos>-60,-150</Pos></Input>
                <Input Name="metalness"><Pos>-120,-150</Pos></Input>
                <Input Name="specular"><Pos>-180,-150</Pos></Input>
                <Input Name="height"><Pos>100,-150</Pos></Input>
                <Input Name="normal"><Pos>160,-150</Pos></Input>


            </Inputs>

            <Outputs>
                <Output Name="OUT_D"><Pos>170,40</Pos></Output>
                <Output Name="OUT_C"><Pos>170,20</Pos></Output>
                <Output Name="OUT_B"><Pos>170,-20</Pos></Output>
                <Output Name="OUT_A"><Pos>170,-40</Pos></Output>
                <Output Name="DEBUG"><Pos>70,70</Pos></Output>
            </Outputs>

        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                <Input Name="baseColor"><Default>$baseColor_color*vec4($baseColor_float,$baseColor_float,$baseColor_float,1.0)</Default></Input>
                <Input Name="roughness"><Default>vec4($roughness_float,$roughness_float,$roughness_float,1.0) </Default></Input>
                <Input Name="metalness"><Default>vec4($metalness_float,$metalness_float,$metalness_float,1.0)</Default></Input>
                <Input Name="specular"><Default>vec4($specular_float,$specular_float,$specular_float,1.0)</Default></Input>
                <Input Name="height"><Default>vec4($height_float,$height_float,$height_float,1.0)</Default></Input>
                <Input Name="normal"><Default>$normal_color*vec4($normal_float,$normal_float,$normal_float,1.0)</Default></Input>

                <Input Name="IN_A"><Default>vec4(0.0)</Default></Input>
                <Input Name="IN_B"><Default>vec4(0.5,1.0,0.0,1.0)</Default></Input>
                <Input Name="IN_C"><Default>vec4(0.0)</Default></Input>
                <Input Name="IN_D"><Default>vec4(0.0,0.0,0.0,1.0)</Default></Input>
                <Input Name="RegionMask"><Default>vec4(1.0)</Default></Input>
                </Inputs>

                <Outputs>
                <Output Name="Debug"><Default>float(1.0)</Default></Output>
                </Outputs>
            </Shader>
            <Shader>
                <Body><![CDATA[


                // DO NOT DELETE THE FOLLOWING COMMENT LINE - USED TO INITIALIZE SLIDERS:
                // $baseColor_color; $normal_color;
                // $baseColor_float; $roughness_float; $metalness_float;
                // $height_float; $normal_float; $specular_float;
                // $height_mult; $roughness_mult; $metalness_mult; $specular_mult;


                // Casting # to Variable
                vec4 roughness_Handle = vec4(#IN_B.r,#IN_B.r,#IN_B.r,1.0);
                vec4 metalness_Handle = vec4(#IN_B.g,#IN_B.g,#IN_B.g,1.0);
                vec4 height_Handle = vec4(#IN_B.b,#IN_B.b,#IN_B.b,1.0);
                vec4 specular_Handle = vec4(#IN_D.r,#IN_D.r,#IN_D.r,1.0);


                float regionmask = $idPick ? col2Mask(#RegionMask,$idColor,$idError) : #RegionMask.r ;
                vec4 id_mask = mix(#RegionMask,vec4(regionmask,regionmask,regionmask,1.0),regionmask*float($idPick));
                regionmask = clamp(regionmask,0.0,1.0);
                // casting as new variable for DEBUG handle purposes only
                vec4 regionMsk_debug = vec4(regionmask,regionmask,regionmask,1.0);
                regionmask = regionmask * float($useRegion);

                // At the cost of readability I am not casting variables to save varyings, since they became a bottleneck while working
                // Each attribute is blendes using the user-chosen Blendmode Blendmode(A,B,Mix)
                // A - A is the incoming Attribute from the previous region. On FLOAT Values an additional Multiplier is evaluated
                // to be able to gain the incoming Attribute (for height for example)
                // B - B is the Attribute from the current Region, either Clamped or unclamped, depending on user choice
                // MIX - The Mix value is determined by 1) Is the region on, 2) is the material attribute on 3) what is the 'mix' value in the ui


                vec4 baseColor = $baseColor_BlendMode(
                                                        #IN_A,
                                                        mix(#baseColor,clamp(#baseColor,vec4(0.0),vec4(1.0)),float($baseColor_clamp)),
                                                        (regionmask*$baseColor_mix) * float($baseColor_Use)
                                                     );


                vec4 Normal =    $normal_BlendMode  (
                                                        #IN_C,
                                                        mix(#normal,clamp(#normal,vec4(0.0),vec4(1.0)),float($normal_clamp)),
                                                        (regionmask*$normal_mix) * float($normal_Use)
                                                    );



                vec4 roughness = $roughness_BlendMode(
                                                        mix(roughness_Handle,roughness_Handle * vec4($roughness_mult),(regionmask*$roughness_mix) * float($roughness_Use)),
                                                        mix(#roughness,clamp(#roughness,vec4(0.0),vec4(1.0)),float($roughness_clamp)),
                                                        (regionmask*$roughness_mix) * float($roughness_Use)
                                                    );



                vec4 metalness = $metalness_BlendMode(
                                                        mix(metalness_Handle,metalness_Handle * vec4($metalness_mult),(regionmask*$metalness_mix) * float($metalness_Use)),
                                                        mix(#metalness,clamp(#metalness,vec4(0.0),vec4(1.0)),float($metalness_clamp)),
                                                        (regionmask*$metalness_mix) * float($metalness_Use)
                                                     );



                vec4 specular =   $specular_BlendMode(
                                                        mix(specular_Handle,specular_Handle * vec4($specular_mult),(regionmask*$specular_mix) * float($specular_Use)),
                                                        mix(#specular,clamp(#specular,vec4(0.0),vec4(1.0)),float($specular_clamp)),
                                                        (regionmask*$specular_mix) * float($specular_Use)
                                                     );



                vec4 height =      $height_BlendMode(
                                                        mix(height_Handle,height_Handle * vec4($height_mult),(regionmask*$height_mix) * float($height_Use)),
                                                        mix(#height,clamp(#height,vec4(0.0),vec4(1.0)),float($height_clamp)),
                                                        (regionmask*$height_mix) * float($height_Use)
                                                    );



                // Output to Handles. Roughness,metalness & height are carried on signle variable
                // The combined Alpha of this region and all previous regions is carried over in OUT_D.g
                OUT_A = baseColor;
                OUT_B = vec4(roughness.r,metalness.r,height.r,1.0);
                OUT_C = Normal;
                OUT_D = vec4(specular.r,clamp(regionmask + #IN_D.g,0.0,1.0),0.0,1.0);
                DEBUG = $debugmode;


                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>

