<!--
================================================================================
== Material Region Base Metal-Rough
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_Region_Base_MR.xml
== Description: Material Region Base to set start values for Material Region Chain
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: October, 3 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>JK_Region_Base_Metal</ID>
    <DefaultName>MR Region Base (MetalRough)</DefaultName>
    <Category>Material Regions/Metal-Rough/</Category>
    <Inputs>
        <Input Name="baseColor" PrettyName="Base Color" />
        <Input Name="roughness" PrettyName="Roughness"/>
        <Input Name="metalness" PrettyName="Metal"/>
        <Input Name="specular" PrettyName="F0Specular"/>
        <Input Name="height" PrettyName="Height"/>
        <Input Name="normal" PrettyName="Normal"/>
    </Inputs>
    <Outputs>
        <Output Name="OUT_A" PrettyName="Output A"/>
        <Output Name="OUT_B" PrettyName="Output B"/>
        <Output Name="OUT_C" PrettyName="Output C"/>
        <Output Name="OUT_D" PrettyName="Output D"/>
    </Outputs>
    <Attributes>
    <!--===============================================================================================================-->
    <Attribute Name="baseColor_color" PrettyName="Color" Group="Handle Base Color (RGBA)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0.0,0.0,0.0,1.0)</Attribute>
    <Attribute Name="baseColor_float" PrettyName="Float" Group="Handle Base Color (RGBA)" Type="double">1.0</Attribute>
    <Attribute Name="baseColor_clamp" PrettyName="Clamp Input" Group="Handle Base Color (RGBA)" Type="bool" Min="false" Max="true">true</Attribute>
     <!--===============================================================================================================-->
    <Attribute Name="roughness_float" PrettyName="Float" Group="Handle Roughness (float)" Type="double">0.3</Attribute>
    <Attribute Name="roughness_clamp" PrettyName="Clamp Input" Group="Handle Roughness (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="metalness_float" PrettyName="Float" Group="Handle Metal (float)" Type="double">0.0</Attribute>
    <Attribute Name="metalness_clamp" PrettyName="Clamp Input" Group="Handle Metal (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="specular_float" PrettyName="Float" Group="Handle F0Specular (float)" Type="double">0.5</Attribute>
    <Attribute Name="specular_clamp" PrettyName="Clamp Input" Group="Handle F0Specular (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="height_float" PrettyName="Float" Group="Handle Height (float)" Type="double">0.5</Attribute>
    <Attribute Name="height_clamp" PrettyName="Clamp Input" Group="Handle Height (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="normal_color" PrettyName="Color" Group="Handle Normal (RGBA)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0.5,0.5,1.0,1.0)</Attribute>
    <Attribute Name="normal_float" PrettyName="Float" Group="Handle Normal (RGBA)" Type="double">1.0</Attribute>
    <Attribute Name="normal_clamp" PrettyName="Clamp Input" Group="Handle Normal (RGBA)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
</Attributes>
 <Groups>
     <Group Name="Handle BaseColor (RGBA)" Expanded="false"></Group>
     <Group Name="Handle Roughness (float)" Expanded="false"></Group>
     <Group Name="Handle Metal (float)" Expanded="false"></Group>
     <Group Name="Handle F0Specular (float)" Expanded="false"></Group>
     <Group Name="Handle Height (float)" Expanded="false"></Group>
     <Group Name="Handle Normal (RGBA)" Expanded="false"></Group>
 </Groups>
 <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="baseColor"><Pos>40,-150</Pos></Input>
                <Input Name="roughness"><Pos>-60,-150</Pos></Input>
                <Input Name="metalness"><Pos>-120,-150</Pos></Input>
                <Input Name="specular"><Pos>-180,-150</Pos></Input>
                <Input Name="height"><Pos>100,-150</Pos></Input>
                <Input Name="normal"><Pos>160,-150</Pos></Input>
            </Inputs>

            <Outputs>

                <Output Name="OUT_D"><Pos>170,40</Pos></Output>
                <Output Name="OUT_C"><Pos>170,20</Pos></Output>
                <Output Name="OUT_B"><Pos>170,-20</Pos></Output>
                <Output Name="OUT_A"><Pos>170,-40</Pos></Output>

            </Outputs>
        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                <Input Name="baseColor"><Default>$baseColor_color*vec4($baseColor_float,$baseColor_float,$baseColor_float,1.0)</Default></Input>
                <Input Name="roughness"><Default>vec4($roughness_float,$roughness_float,$roughness_float,1.0) </Default></Input>
                <Input Name="metalness"><Default>vec4($metalness_float,$metalness_float,$metalness_float,1.0)</Default></Input>
                <Input Name="specular"><Default>vec4($specular_float,$specular_float,$specular_float,1.0)</Default></Input>
                <Input Name="height"><Default>vec4($height_float,$height_float,$height_float,1.0)</Default></Input>
                <Input Name="normal"><Default>$normal_color*vec4($normal_float,$normal_float,$normal_float,1.0)</Default></Input>
                </Inputs>
            </Shader>
            <Shader>
                <Body><![CDATA[

           // DO NOT DELETE THE FOLLOWING COMMENT LINE - USED TO INITIALIZE SLIDERS:
           // $baseColor_color; $normal_color; $baseColor_float;  $roughness_float; $metalness_float; $height_float;  $normal_float;  $specular_float;


            // Blending between clamped and unclamped.
            // Clamping here is only done directly on the region input (baseColor, roughness etc.)
            // not on any values coming from another region
            vec4 baseColor = mix(#baseColor,clamp(#baseColor,vec4(0.0),vec4(1.0)),float($baseColor_clamp));
            vec4 normal = mix(#normal,clamp(#normal,vec4(0.0),vec4(1.0)),float($normal_clamp));

            float roughness = mix(#roughness.r,clamp(#roughness.r,0.0,1.0),float($roughness_clamp));
            float metalness = mix(#metalness.r,clamp(#metalness.r,0.0,1.0),float($metalness_clamp));
            float specular = mix(#specular.r,clamp(#specular.r,0.0,1.0),float($specular_clamp));
            float height = mix(#height.r,clamp(#height.r,0.0,1.0),float($height_clamp));


            // Output to Handles. Roughness,metalness & height are carried on signle variable
            OUT_A = baseColor;
            OUT_B = vec4(roughness,metalness,height,1.0);
            OUT_C = normal;
            OUT_D = vec4(specular,1.0,0.0,1.0);




                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>

