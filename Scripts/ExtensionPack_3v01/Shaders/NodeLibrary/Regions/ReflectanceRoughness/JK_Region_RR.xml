<!--
===============================================================================
== Material Region Reflectance-Roughness
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_Region_RR.xml
== Description: Material Region to modulate values throughout the flow of the graph
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: October, 3 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>JK_Region_RR</ID>
    <DefaultName>RR Region (R-R)</DefaultName>
    <Category>Material Regions/Reflectance-Roughness/</Category>
    <Inputs>
        <Input Name="IN_A" PrettyName="Input A"/>
        <Input Name="IN_B" PrettyName="Input B"/>
        <Input Name="IN_C" PrettyName="Input C"/>
        <Input Name="IN_D" PrettyName="Input D"/>
        <Input Name="RegionMask" />
        <Input Name="diffuse" />
        <Input Name="specRough"/>
        <Input Name="specRefl"/>
        <Input Name="specCol"/>
        <Input Name="Disp"/>
        <Input Name="Normal"/>
    </Inputs>
    <Outputs>
        <Output Name="OUT_A" PrettyName="Output A"/>
        <Output Name="OUT_B" PrettyName="Output B"/>
        <Output Name="OUT_C" PrettyName="Output C"/>
        <Output Name="OUT_D" PrettyName="Output D"/>
        <Output Name="DEBUG" />
    </Outputs>
    <Attributes>
    <Attribute Name="useRegion" PrettyName="Activate Region" Type="bool" Min="false" Max="true">true</Attribute>
    <Attribute Name="debugmode" PrettyName="Debug Output" Group="" Type="userenum">diffuse,diffuse,Roughness,Reflectance,specCol,Disp,Normal,vec4(0.0),regionMsk_debug,id_mask,Diffuse,Spec Roughness,Spec Reflectance,Spec Color,Displacement,Normal,-------------,Region Mask, Region Mask over ID</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="diffuse_Use" PrettyName="On/Off" Group="Handle Diffuse (RGBA)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="diffuse_color" PrettyName="Color" Group="Handle Diffuse (RGBA)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(1,1,1,1)</Attribute>
    <Attribute Name="diffuse_float" PrettyName="Float" Group="Handle Diffuse (RGBA)" Type="double">1.0</Attribute>
    <Attribute Name="diffuse_mix" PrettyName="Mix" Group="Handle Diffuse (RGBA)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="diffuse_BlendMode" PrettyName="Mode" Group="Handle Diffuse (RGBA)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="diffuse_clamp" PrettyName="Clamp Input" Group="Handle Diffuse (RGBA)" Type="bool" Min="false" Max="true">true</Attribute>
     <!--===============================================================================================================-->
    <Attribute Name="roughness_Use" PrettyName="On/Off" Group="Handle Roughness (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="roughness_float" PrettyName="Float" Group="Handle Roughness (float)" Type="double">1.0</Attribute>
    <Attribute Name="roughness_mult" PrettyName="Input Multiplier" Group="Handle Roughness (float)" Type="double">1.0</Attribute>
    <Attribute Name="roughness_mix" PrettyName="Mix" Group="Handle Roughness (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="roughness_BlendMode" PrettyName="Mode" Group="Handle Roughness (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="roughness_clamp" PrettyName="Clamp Input" Group="Handle Roughness (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="reflectance_Use" PrettyName="On/Off" Group="Handle Reflectance (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="reflectance_float" PrettyName="Float" Group="Handle Reflectance (float)" Type="double">1.0</Attribute>
    <Attribute Name="reflectance_mult" PrettyName="Input Multiplier" Group="Handle Reflectance (float)" Type="double">1.0</Attribute>
    <Attribute Name="reflectance_mix" PrettyName="Mix" Group="Handle Reflectance (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="reflectance_BlendMode" PrettyName="Mode" Group="Handle Reflectance (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="reflectance_clamp" PrettyName="Clamp Input" Group="Handle Reflectance (float)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="specCol_Use" PrettyName="On/Off" Group="Handle Specular Color (RGBA)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="specCol_color" PrettyName="Color" Group="Handle Specular Color (RGBA)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(1,1,1,1)</Attribute>
    <Attribute Name="specCol_float" PrettyName="Float" Group="Handle Specular Color (RGBA)" Type="double">1.0</Attribute>
    <Attribute Name="specCol_mix" PrettyName="Mix" Group="Handle Specular Color (RGBA)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="specCol_BlendMode" PrettyName="Mode" Group="Handle Specular Color (RGBA)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="specCol_clamp" PrettyName="Clamp Input" Group="Handle Specular Color (RGBA)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="disp_Use" PrettyName="On/Off" Group="Handle Displacement/Bump (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="disp_float" PrettyName="Float" Group="Handle Displacement/Bump (float)" Type="double">0.0</Attribute>
    <Attribute Name="disp_mult" PrettyName="Input Multiplier" Group="Handle Displacement/Bump (float)" Type="double">1.0</Attribute>
    <Attribute Name="disp_mix" PrettyName="Mix" Group="Handle Displacement/Bump (float)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="disp_BlendMode" PrettyName="Mode" Group="Handle Displacement/Bump (float)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="disp_clamp" PrettyName="Clamp Input" Group="Handle Displacement/Bump (float)" Type="bool" Min="false" Max="true">false</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="normal_Use" PrettyName="On/Off" Group="Handle Normal (RGB)" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="normal_color" PrettyName="Color" Group="Handle Normal (RGB)" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0.216,0.216,1.0,1.0)</Attribute>
    <Attribute Name="normal_float" PrettyName="Float" Group="Handle Normal (RGB)" Type="double">1.0</Attribute>
    <Attribute Name="normal_mix" PrettyName="Mix" Group="Handle Normal (RGB)" Type="double" Min="0.0" Max="1.0">1.0</Attribute>
    <Attribute Name="normal_BlendMode" PrettyName="Mode" Group="Handle Normal (RGB)" Type="userenum">Dynamic:MriBlendMode:Comp_Default</Attribute>
    <Attribute Name="normal_clamp" PrettyName="Clamp Input" Group="Handle Normal (RGB)" Type="bool" Min="false" Max="true">true</Attribute>
    <!--===============================================================================================================-->
    <Attribute Name="idPick" PrettyName="On/Off" Group="Material Region ID" Type="bool" Min="false" Max="true">false</Attribute>
    <Attribute Name="idColor" PrettyName="Mask ID" Group="Material Region ID" Type="color" Min="(0,0,0,1)" Max="(1,1,1,1)">(0.0,0.0,0.0,1)</Attribute>
    <Attribute Name="idError" PrettyName="Max Error" Group="Material Region ID" Type="double" Min="0.0" Max="0.5">0.1</Attribute>
    <!--===============================================================================================================-->
</Attributes>
 <Groups>
     <Group Name="Handle Diffuse (RGBA)" Expanded="false"></Group>
     <Group Name="Handle Roughness (float)" Expanded="false"></Group>
     <Group Name="Handle Reflectance (float)" Expanded="false"></Group>
     <Group Name="Handle Specular Color (RGBA)" Expanded="false"></Group>
     <Group Name="Handle Displacement/Bump (float)" Expanded="false"></Group>
     <Group Name="Handle Normal (RGB)" Expanded="false"></Group>
     <Group Name="Material Region ID" Expanded="false"></Group>
 </Groups>
 <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="IN_A"><Pos>-170,-40</Pos></Input>
                <Input Name="IN_B"><Pos>-170,-20</Pos></Input>
                <Input Name="IN_C"><Pos>-170,20</Pos></Input>
                <Input Name="IN_D"><Pos>-170,40</Pos></Input>
                <Input Name="RegionMask"><Pos>0,150</Pos></Input>

                <Input Name="diffuse"><Pos>70,-150</Pos></Input>
                <Input Name="specRough"><Pos>-60,-150</Pos></Input>
                <Input Name="specRefl"><Pos>-120,-150</Pos></Input>
                <Input Name="specCol"><Pos>-170,-150</Pos></Input>
                <Input Name="Disp"><Pos>120,-150</Pos></Input>
                <Input Name="Normal"><Pos>170,-150</Pos></Input>


            </Inputs>

            <Outputs>
                <Output Name="OUT_D"><Pos>170,40</Pos></Output>
                <Output Name="OUT_C"><Pos>170,20</Pos></Output>
                <Output Name="OUT_B"><Pos>170,-20</Pos></Output>
                <Output Name="OUT_A"><Pos>170,-40</Pos></Output>
                <Output Name="DEBUG"><Pos>70,70</Pos></Output>
            </Outputs>

        </Context>
        <Context Type="GLSL">
            <Shader ShaderType='Fragment'>
                <Inputs>
                <Input Name="diffuse"><Default>$diffuse_color*vec4($diffuse_float,$diffuse_float,$diffuse_float,1.0)</Default></Input>
                <Input Name="specRough"><Default>vec4($roughness_float,$roughness_float,$roughness_float,1.0) </Default></Input>
                <Input Name="specRefl"><Default>vec4($reflectance_float,$reflectance_float,$reflectance_float,1.0)</Default></Input>
                <Input Name="specCol"><Default>$specCol_color*vec4($specCol_float,$specCol_float,$specCol_float,1.0)</Default></Input>
                <Input Name="Disp"><Default>vec4($disp_float,$disp_float,$disp_float,1.0)</Default></Input>
                <Input Name="Normal"><Default>$normal_color*vec4($normal_float,$normal_float,$normal_float,1.0)</Default></Input>

                <Input Name="IN_A"><Default>vec4(0.0)</Default></Input>
                <Input Name="IN_B"><Default>vec4(0.5,1.0,0.0,0.0)</Default></Input>
                <Input Name="IN_C"><Default>vec4(0.0)</Default></Input>
                <Input Name="IN_D"><Default>vec4(0.0,0.0,0.0,0.0)</Default></Input>
                <Input Name="RegionMask"><Default>vec4(1.0)</Default></Input>
                </Inputs>

   <Outputs>
                <Output Name="Debug"><Default>float(0.0)</Default></Output>
  </Outputs>
            </Shader>
            <Shader>
                <Body><![CDATA[


                // DO NOT DELETE THE FOLLOWING COMMENT LINE - USED TO INITIALIZE SLIDERS:
                // $diffuse_color; $specCol_color; $normal_color;
                // $diffuse_float; $roughness_float; $reflectance_float; $specCol_float; $disp_float; $normal_float;


                // Casting # to Variable
                vec4 roughness_Handle = vec4(#IN_B.r,#IN_B.r,#IN_B.r,1.0);
                vec4 Reflectance_Handle = vec4(#IN_B.g,#IN_B.g,#IN_B.g,1.0);
                vec4 disp_Handle = vec4(#IN_B.b,#IN_B.b,#IN_B.b,1.0);

                float regionmask = $idPick ? col2Mask(#RegionMask,$idColor,$idError) : #RegionMask.r ;
                vec4 id_mask = mix(#RegionMask,vec4(regionmask,regionmask,regionmask,1.0),regionmask*float($idPick));
                regionmask = clamp(regionmask,0.0,1.0);
                // casting as new variable for DEBUG handle purposes only
                vec4 regionMsk_debug = vec4(regionmask,regionmask,regionmask,1.0);
                regionmask = regionmask * float($useRegion);


                // At the cost of readability I am not casting variables to save varyings, since they became a bottleneck while working
                // Each attribute is blendes using the user-chosen Blendmode Blendmode(A,B,Mix)
                // A - A is the incoming Attribute from the previous region. On FLOAT Values an additional Multiplier is evaluated
                // to be able to gain the incoming Attribute (for height for example)
                // B - B is the Attribute from the current Region, either Clamped or unclamped, depending on user choice
                // MIX - The Mix value is determined by 1) Is the region on, 2) is the material attribute on 3) what is the 'mix' value in the ui


                vec4 diffuse =          $diffuse_BlendMode(
                                                             #IN_A,
                                                             mix(#diffuse,clamp(#diffuse,vec4(0.0),vec4(1.0)),float($diffuse_clamp)),
                                                             (regionmask*$diffuse_mix) * float($diffuse_Use)
                                                         );



                vec4 Normal =           $normal_BlendMode(
                                                            vec4(#IN_C.rgb,1.0),
                                                            mix(#Normal,clamp(#Normal,vec4(0.0),vec4(1.0)),float($normal_clamp)),
                                                            (regionmask*$normal_mix) * float($normal_Use)
                                                         );



                vec4 specCol =        $specCol_BlendMode(
                                                          #IN_D,
                                                          mix(#specCol,clamp(#specCol,vec4(0.0),vec4(1.0)),float($specCol_clamp)),
                                                          (regionmask*$specCol_mix) * float($specCol_Use)
                                                        );



                vec4 Roughness =    $roughness_BlendMode(
                                                           mix(roughness_Handle,roughness_Handle * vec4($roughness_mult),(regionmask*$roughness_mix) * float($roughness_Use)),
                                                           mix(#specRough,clamp(#specRough,vec4(0.0),vec4(1.0)),float($roughness_clamp)),
                                                           (regionmask*$roughness_mix) * float($roughness_Use)
                                                        );



                vec4 Reflectance = $reflectance_BlendMode(
                                                            mix(Reflectance_Handle,Reflectance_Handle * vec4($reflectance_mult),(regionmask*$reflectance_mix) * float($reflectance_Use)),
                                                            mix(#specRefl,clamp(#specRefl,vec4(0.0),vec4(1.0)),float($reflectance_clamp)),
                                                            (regionmask*$reflectance_mix) * float($reflectance_Use)
                                                        );




                vec4 Disp =             $disp_BlendMode(
                                                            mix(disp_Handle,disp_Handle * vec4($disp_mult),(regionmask*$disp_mix) * float($disp_Use)),
                                                            mix(#Disp,clamp(#Disp,vec4(0.0),vec4(1.0)),float($disp_clamp)),
                                                            (regionmask*$disp_mix) * float($disp_Use)
                                                        );




                // Output to Handles. Roughness,reflectance & disp are carried on signle variable
                OUT_A = diffuse;
                OUT_B = vec4(Roughness.r,Reflectance.r,Disp.r,1.0);
                OUT_C = vec4(Normal.rgb,( clamp(regionmask + #IN_C.a,0.0,1.0) ) );
                OUT_D = specCol;
                DEBUG = $debugmode;





                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>

