<!--
================================================================================
== Set Range
== Copyright (c) 2015 Jens Kafitz. All Rights Reserved.
================================================================================
== File: JK_SetRange.xml
== Description: Simple remap node with optional components like rgba remapping.
================================================================================
== Author: Jens Kafitz
== Web: www.campi3d.com
== Email: MariIdeas@campi3d.com
================================================================================
== Modified Date: May 18, 2015
================================================================================
== Redistribution and use in source and binary forms, with or without
== modification, are permitted provided that the following conditions are met:
==
== 1. Redistributions of source code must retain the above copyright
== notice, this list of conditions and the following disclaimer.
==
== 2. Redistributions in binary form must reproduce the above copyright
== notice, this list of conditions and the following disclaimer in the
== documentation and/or other materials provided with the distribution.
==
== 3. Neither the name of the copyright holder nor the names of its
== contributors may be used to endorse or promote products derived from
== this software without specific prior written permission.
==
== THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
== IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
== THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
== PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
== CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
== EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
== PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
== OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
== WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
== OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
== ADVISED OF HE POSSIBILITY OF SUCH DAMAGE.
================================================================================
-->

<Node>
    <ID>Set Range</ID>
    <DefaultName>Set Range</DefaultName>
    <Category>Filter/Extension Pack/Histogram/</Category>
    <Tags>
        <Tag>_adjustment</Tag>
    </Tags>
    <Inputs>
        <Input Name="Input"></Input>
        <Input Name="oMin" PrettyName="Old Min"></Input>
        <Input Name="oMax" PrettyName="Old Max"></Input>
        <Input Name="nMin" PrettyName="New Min"></Input>
        <Input Name="nMax" PrettyName="New Max"></Input>
        <Input Name="Mult" PrettyName="Scale"></Input>
    </Inputs>
    <Attributes>
        <!--===============================================================================================================-->
        <Attribute Name="oMin" PrettyName="OldMin" Group="" Type="float" >0.0</Attribute>
        <Attribute Name="oMax" PrettyName="OldMax" Group="" Type="float" >1.0</Attribute>
        <Attribute Name="nMin" PrettyName="NewMin" Group="" Type="float" >0.0</Attribute>
        <Attribute Name="nMax" PrettyName="NewMax" Group="" Type="float" >1.0</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="sMult" PrettyName="MultiplyScale" Group="Extra Attributes" Type="float" >1.0</Attribute>
        <Attribute Name="useClamp" PrettyName="Clamp Values" Group="Extra Attributes" Type="bool" Min="false" Max="true">false</Attribute>
        <!--===============================================================================================================-->
        <Attribute Name="Red" Type="bool" Group="Channels" Min="true" Max="false">true</Attribute>
        <Attribute Name="Green" Type="bool" Group="Channels" Min="true" Max="false">true</Attribute>
        <Attribute Name="Blue" Type="bool" Group="Channels" Min="true" Max="false">true</Attribute>
        <Attribute Name="Alpha" Type="bool" Group="Channels" Min="true" Max="false">false</Attribute>
        <!--===============================================================================================================-->
    </Attributes>
    <Contexts>
        <Context Type="NodeGraphView">
            <Inputs>
                <Input Name="Input"><Pos>0,-50</Pos></Input>
                <Input Name="oMin"><Pos>-100,-20</Pos></Input>
                <Input Name="oMax"><Pos>-100,20</Pos></Input>
                <Input Name="nMin"><Pos>100,-20</Pos></Input>
                <Input Name="nMax"><Pos>100,20</Pos></Input>
                <Input Name="Mult"><Pos>30,-30</Pos></Input>
            </Inputs>
        </Context>
        <Context Type="GLSL">
            <Shader>
                <Inputs>
                    <Input Name="Input"><Default>vec4(1,1,1,1)</Default></Input>
                    <Input Name="oMin"><Default>vec4($oMin,$oMin,$oMin,1.0)</Default></Input>
                    <Input Name="oMax"><Default>vec4($oMax,$oMax,$oMax,1.0)</Default></Input>
                    <Input Name="nMin"><Default>vec4($nMin,$nMin,$nMin,1.0)</Default></Input>
                    <Input Name="nMax"><Default>vec4($nMax,$nMax,$nMax,1.0)</Default></Input>
                    <Input Name="Mult"><Default>vec4($sMult,$sMult,$sMult,1.0)</Default></Input>

                </Inputs>
                <Body><![CDATA[

                // Initializing Sliders, do not remove commment line:
                //  $oMin, $oMax, $nMin, $nMax, $sMult

                vec4 old = (#Input.rgba - vec4(#oMin)) / (vec4(#oMax) - vec4(#oMin));
                vec4 new = ( ((vec4(#nMax) - vec4(#nMin)) * old.rgba) + vec4(#nMin) ) * vec4(#Mult) ;

                if ($useClamp == true)
                    {
                    Output = vec4(
                                  $Red   ? clamp(new.r,0.0,1.0) : #Input.r,
                                  $Green ? clamp(new.g,0.0,1.0) : #Input.g,
                                  $Blue  ? clamp(new.b,0.0,1.0) : #Input.b,
                                  $Alpha ? clamp(new.a,0.0,1.0) : #Input.a
                                  );

                }

                else
                    {
                    Output = vec4(
                                  $Red   ? new.r : #Input.r,
                                  $Green ? new.g : #Input.g,
                                  $Blue  ? new.b : #Input.b,
                                  $Alpha ? new.a : #Input.a
                                 );
                    }

                ]]></Body>
            </Shader>
        </Context>
    </Contexts>
</Node>